/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package demo;

import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;

import java.util.LinkedList;
import java.util.List;

import org.junit.jupiter.api.Test;

public class AppTest {
    @Test public void testAppHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull("app should have a greeting", classUnderTest.getGreeting());

        // mock creation
        List mockedList = mock(List.class);

        // using mock object - it does not throw any "unexpected interaction" exception
        mockedList.add("one");
        mockedList.clear();

        // selective, explicit, highly readable verification
        verify(mockedList).add("one");
        verify(mockedList).clear();

        // you can mock concrete classes, not only interfaces
        LinkedList mockedList2 = mock(LinkedList.class);

        // stubbing appears before the actual execution
        when(mockedList2.get(0)).thenReturn("first");

        // the following prints "first"
        System.out.println(mockedList2.get(0));

        // the following prints "null" because get(999) was not stubbed
        System.out.println(mockedList2.get(999));
    }
}
